make_col path:lower(string(EXTRA.path))
filter contains(string(path), "firewall")

make_table
pick_col
    // =========================
    // TIER 1 — CORE EVENT CONTEXT
    // =========================
    //Timestamp:string(FIELDS.timestamp),
    Timestamp:string(replace(replace(FIELDS.timestamp, "T", " "), "Z", "")),
    //Date:string(FIELDS.date),
    //Time:string(FIELDS.time),
    Action:string(FIELDS.action),
    LogType:string(FIELDS.type),
    SubType:string(FIELDS.subtype),
    LogDescription:string(FIELDS.logdesc),
    VPNUser:string(FIELDS.user),
    RemoteIP:string(FIELDS.remip),
    SourceIP:string(FIELDS.srcip),
    DestinationIP:string(FIELDS.dstip),
    DestinationHost:string(FIELDS.dst_host),
    Service:string(FIELDS.service),
    Protocol:string(FIELDS.proto),
    Outcome:string(FIELDS.reason),
    Message:string(FIELDS.message),

    // =========================
    // TIER 2 — VPN & TRAFFIC CONTEXT
    // =========================
    VPNGroup:string(FIELDS.group),
    TunnelID:string(FIELDS.tunnelid),
    TunnelType:string(FIELDS.tunneltype),
    VPNMsg:string(FIELDS.msg),
    SourcePort:string(FIELDS.srcport),
    DestinationPort:string(FIELDS.dstport),
    SourceInterface:string(FIELDS.srcintf),
    SourceInterfaceRole:string(FIELDS.srcintfrole),
    DestinationInterface:string(FIELDS.dstintf),
    DestinationInterfaceRole:string(FIELDS.dstintfrole),
    SourceCountry:string(FIELDS.srccountry),
    DestinationCountry:string(FIELDS.dstcountry),
    DestinationMAC:string(FIELDS.dstmac),

    // =========================
    // TIER 3 — POLICY, SESSION, TRANSLATION
    // =========================
    PolicyID:string(FIELDS.policyid),
    PolicyName:string(FIELDS.policyname),
    PolicyType:string(FIELDS.policytype),
    PolicyUUID:string(FIELDS.poluuid),
    SessionID:string(FIELDS.sessionid),
    TranslatedIP:string(FIELDS.tranip),
    TranslatedPort:string(FIELDS.tranport),
    TranslationDisposition:string(FIELDS.trandisp),
    ReceivedBytes:int64(FIELDS.rcvdbyte),
    SentBytes:int64(FIELDS.sentbyte),
    ReceivedPackets:int64(FIELDS.rcvdpkt),
    SentPackets:int64(FIELDS.sentpkt),

    // =========================
    // TIER 4 — SYSTEM & GRAYLOG METADATA
    // =========================
    DeviceName:string(FIELDS.devname),
    DeviceID:string(FIELDS.devid),
    SourceDevice:string(FIELDS.dstdevtype),
    LogID:string(FIELDS.logid),
    LogLevel:string(FIELDS.level),
    EventTime:string(FIELDS.eventtime),
    Timezone:string(FIELDS.tz),
    VirtualDomain:string(FIELDS.vd),
    Facility:string(FIELDS.facility),
    FacilityNum:string(FIELDS.facility_num),

    // Graylog-specific ingestion metadata
    GL2MessageID:string(FIELDS.gl2_message_id),
    GL2AccountedMessageSize:int64(FIELDS.gl2_accounted_message_size),
    GL2ProcessingTimestamp:string(FIELDS.gl2_processing_timestamp),
    GL2ReceiveTimestamp:string(FIELDS.gl2_receive_timestamp),
    GL2ProcessingDuration:int64(FIELDS.gl2_processing_duration_ms),
    GL2RemoteIP:string(FIELDS.gl2_remote_ip),
    GL2RemotePort:string(FIELDS.gl2_remote_port),
    GL2SourceInput:string(FIELDS.gl2_source_input),
    GL2SourceNode:string(FIELDS.gl2_source_node),
    RAW:FIELDS
dedup
//filter Timestamp >= parse_isotime("2025-08-11 00:00:00")
//  and Timestamp < parse_isotime("2025-08-19 00:00:00")
